version: '3.9'

services:
  apigateway:
    build:
      context: ./backend/ApiGateaway
      dockerfile: dockerfile
    ports:
      - "5101:8080"
    depends_on:
      - authservice
      - userservice
      - productservice
      - orderservice
    networks:
      - ecommerce-net

  authservice:
    build:
      context: ./backend/AuthService
      dockerfile: dockerfile
    ports:
      - "5024:8080"
    networks:
      - ecommerce-net

  userservice:
    build:
      context: ./backend/UserService
      dockerfile: dockerfile
    ports:
      - "5001:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=UserDb;User Id=sa;Password=StrongP@ssw0rd123;TrustServerCertificate=True;
    depends_on:
      - sqlserver
    networks:
      - ecommerce-net

  productservice:
    build:
      context: ./backend/ProductService
      dockerfile: dockerfile
    ports:
      - "5209:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ProductDb;User Id=sa;Password=StrongP@ssw0rd123;TrustServerCertificate=True;
    depends_on:
      - sqlserver
    networks:
      - ecommerce-net

  orderservice:
    build:
      context: ./backend/OrderService
      dockerfile: dockerfile
    ports:
      - "5278:8080"
    environment:
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=YourDatabaseName
      - MongoDbSettings__OrderCollectionName=Orders
    depends_on:
      - productservice
      - mongodb
      - rabbitmq
    networks:
      - ecommerce-net

  notificationservice:
    build:
      context: ./backend/NotificationService
      dockerfile: dockerfile
    ports:
      - "5146:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-net

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - apigateway
    networks:
      - ecommerce-net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"  # Web UI
      - "5672:5672"    # AMQP
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-net

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "StrongP@ssw0rd123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - ecommerce-net

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    driver: bridge
